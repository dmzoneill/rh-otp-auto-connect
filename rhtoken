#!/usr/bin/env python3

"""
Install python dependancies
===========================
pip3 install selenium
pip3 install requests

Download rhtoken
================
curl https://raw.githubusercontent.com/dmzoneill/rh-otp-auto-connect/master/rhtoken -o /usr/local/bin/rhtoken
chmod +x /usr/local/bin/rhtoken

Get chrome version
==================
MacOS
export gcv=$(/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version)

Linux
export gcv=$(google-chrome --version)

Download chromedriver
=====================
MacOs
curl https://chromedriver.storage.googleapis.com/$gcv/chromedriver_mac64.zip -o cd.zip
curl https://chromedriver.storage.googleapis.com/$gcv/chromedriver_mac64_m1.zip -o cd.zip

Linux
curl https://chromedriver.storage.googleapis.com/$gcv/chromedriver_linux64.zip -o cd.zip

Extract Chrome Driver
=====================
cd ~/Downloads
unzip 'cd.zip' -d /usr/local/bin
chmod +x /usr/local/bin/chromedriver

Create a profile in google chrome
=================================
After creating a profile
visit chrome://version and get the profile location

On MacOS it will be something like
/Users/daoneill/Library/Application Support/Google/Chrome/Profile 2

On linux
/home/daoneill/.config/google-chrome/Profile 2/Default

Update the profile below
========================
Scroll down and update the profile location

Security
========================
MacOS
You may need to visit "system preferences > security and private"
and allow chrome driver to run

"""

import argparse
import subprocess
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
import time

chrome_driver_dir = "/usr/local/bin/"
chrome_driver_location = chrome_driver_dir + "/chromedriver"
profile_location = "/home/daoneill/.config/google-chrome/Profile 4/Default"


def get_token_string():
    my_parser = argparse.ArgumentParser(description='login to redhat osd')
    my_parser.add_argument('env', metavar='env', type=str, help='the env to get a token')
    args = my_parser.parse_args()

    url = None

    if args.env == "e":
        url = "https://oauth-openshift.apps.c-rh-c-eph.8p0c.p1.openshiftapps.com/oauth/token/request"
    elif args.env == "p":
        url = "https://oauth-openshift.apps.crcp01ue1.o9m8.p1.openshiftapps.com/oauth/token/request"
    elif args.env == "s":
        url = "https://oauth-openshift.apps.crcs02ue1.urby.p1.openshiftapps.com/oauth/token/request"
    elif args.env == "c":
        url = "https://oauth-openshift.apps.appsrep05ue1.zqxk.p1.openshiftapps.com/oauth/token/request"
    else:
        url = None

    options = Options()
    options.add_argument("--user-data-dir=" + profile_location)
    # options.add_argument('--headless')
    service = Service(chrome_driver_location)
    driver = webdriver.Chrome(service=service, options=options)
    driver.get(url)
    wait = WebDriverWait(driver, 10)
    wait.until(lambda driver: driver.current_url != url)
    link = driver.find_element(By.XPATH,'//a')
    link.click()

    Button=''
    while not Button:
        try:
            Button = driver.find_element(By.XPATH,'//button')
            Button.click()
            time.sleep(0.5)
        except:
            continue

    Pre=''
    while not Pre:
        try:
            Pre = driver.find_element(By.XPATH,'//pre').text
            Pre.replace("('","").replace("')","").replace("'","").replace("\n","")
            time.sleep(0.5)
        except:
            continue

    parts = Pre.split(" ")
    login_process = subprocess.Popen(parts, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    stdout, _ = login_process.communicate()

    print(Pre)
    print(stdout.decode("UTF-8"))

    driver.close()

if __name__ == "__main__":
    get_token_string()  
